import cv2
import numpy as np

cap = cv2.VideoCapture(0)
cap.set(3, 160)
cap.set(4, 120)


def nil(self):
    pass


cv2.namedWindow('TrackBar')
cv2.createTrackbar('HueLow', 'TrackBar', 100, 179, nil)
cv2.createTrackbar('HueHigh', 'TrackBar', 179, 179, nil)
cv2.createTrackbar('SatLow', 'TrackBar', 0, 255, nil)
cv2.createTrackbar('SatHigh', 'TrackBar', 255, 255, nil)
cv2.createTrackbar('ValLow', 'TrackBar', 0, 255, nil)
cv2.createTrackbar('ValHigh', 'TrackBar', 255, 255, nil)

while True:
    ret, frame = cap.read()

    HueL = cv2.getTrackbarPos('HueLow', 'TrackBar')
    HueH = cv2.getTrackbarPos('HueHigh', 'TrackBar')
    SatL = cv2.getTrackbarPos('SatLow', 'TrackBar')
    SatH = cv2.getTrackbarPos('SatHigh', 'TrackBar')
    ValL = cv2.getTrackbarPos('ValLow', 'TrackBar')
    ValH = cv2.getTrackbarPos('ValHigh', 'TrackBar')

    low_b = np.uint8([HueL, SatL, ValL])
    high_b = np.uint8([HueH, SatL, ValH])

    mask = cv2.inRange(frame, high_b, low_b)

    contours, hierarchy = cv2.findContours(mask, 1, cv2.CHAIN_APPROX_NONE)
    cv2.drawContours(frame, contours, -1, (0, 255, 0), 1)

    if len(contours) > 0:
        c = max(contours, key=cv2.contourArea)
        M = cv2.moments(c)

        if M["m00"] != 0:
            cx = int(M["m10"] / M["m00"])
            cy = int(M["m01"] / M["m00"])
            print("CX:" + str(cx) + " CY:" + str(cy))

            cv2.line(frame, (cx,0), (cx,720), (255,0,0), 1)
            cv2.line(frame, (0,cy), (1280,cy), (255,0,0), 1)

    cv2.imshow('image - mask', mask)
    cv2.imshow('image', frame)

    if cv2.waitKey(1) & 0xff == ord('q'):
        break

cap.release()
cv2.destoryAllWindows()
